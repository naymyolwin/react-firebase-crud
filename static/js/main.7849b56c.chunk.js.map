{"version":3,"sources":["firebase.js","update.js","login.js","mainpage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","update","state","users","temp","ref","firestore","collection","updateHandler","e","setState","prevState","map","user","docID","target","id","Object","assign","name","value","stopListener","unsubRef","logout","auth","signOut","then","catch","error","add","docRef","console","log","save","forEach","doc","remove","delete","a","this","onSnapshot","snap","item","push","data","getUsers","type","onClick","onChange","Component","Login","email","password","loginStatus","handleInput","loginHandler","signInWithEmailAndPassword","userCredential","login","errorCode","code","errorMessage","message","onAuthStateChanged","to","React","mainpage","props","App","sort","b","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7849b56c.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDKrWm6AWBbFzCiG_Z3Yic0uZSmD0w23dg\",\n  authDomain: \"react-firebase-crud-de718.firebaseapp.com\",\n  projectId: \"react-firebase-crud-de718\",\n  storageBucket: \"react-firebase-crud-de718.appspot.com\",\n  messagingSenderId: \"710784419944\",\n  appId: \"1:710784419944:web:845bee3740ef4a4d6c93dd\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\n\nexport class update extends Component {\n  unsubRef;\n  state = {\n    users: [],\n    temp: [],\n    ref: firebase.firestore().collection(\"users\"),\n  };\n\n  async getUsers() {\n    this.unsubRef = await this.state.ref.onSnapshot((snap) => {\n      const item = [];\n\n      snap.forEach((user) => {\n        const docID = user.id;\n        item.push({\n          name: user.data().name,\n          //id: user.data().id,\n          docID: docID,\n        });\n      });\n      this.setState({\n        users: item, //.sort((a, b) => (a.id > b.id ? 1 : b.id > a.id ? -1 : 0)),\n      });\n    });\n  }\n\n  updateHandler = (e) => {\n    // const objIndex = this.state.users.findIndex((obj) => obj.id == e.id);\n    this.setState((prevState) => ({\n      users: prevState.users.map((user) =>\n        user.docID === e.target.id\n          ? Object.assign(user, { name: e.target.value })\n          : user\n      ),\n    }));\n    //console.log(\"Before update: \", this.state.users[objIndex].name);\n    //  console.log([e.target.id.name]);\n  };\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  async componentWillUnmount() {\n    await this.stopListener(this.unsubRef);\n  }\n\n  // function to stop listener\n  stopListener = (unsubRef) => {\n    unsubRef();\n  };\n\n  logout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then // can do something.\n      ()\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n\n  add = () => {\n    this.state.ref\n      .add({\n        name: \"\",\n      })\n      .then(function (docRef) {\n        console.log(\"Tutorial created with ID: \", docRef.id);\n      })\n      .catch(function (error) {\n        console.error(\"Error adding Tutorial: \", error);\n      });\n  };\n\n  save = () => {\n    this.state.users.forEach((user) => {\n      this.state.ref.doc(user.docID).update({\n        name: user.name,\n      });\n    });\n  };\n\n  remove = (user) => {\n    this.state.ref.doc(user.docID).delete();\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Update Data</h1>\n\n        <input type=\"submit\" value=\"add\" onClick={this.add} />\n        {this.state.users.map((user) => (\n          <div key={user.docID}>\n            <input\n              id={user.docID}\n              type=\"text\"\n              value={user.name}\n              onChange={this.updateHandler}\n            />\n            <button onClick={() => this.remove(user)}>remove</button>\n          </div>\n        ))}\n\n        <input type=\"submit\" value=\"save\" onClick={this.save} />\n        <input type=\"submit\" value=\"logout\" onClick={this.logout} />\n      </div>\n    );\n  }\n}\n\nexport default update;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Update from \"./update\";\nimport firebase from \"./firebase\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    loginStatus: false,\n    ref: firebase.auth(),\n  };\n\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value }, () => {\n      console.log(this.state.email);\n      console.log(this.state.password);\n    });\n  };\n\n  loginHandler = () => {\n    this.state.ref\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then((userCredential) => {\n        console.log(\"auth pass\");\n        this.setState({\n          login: userCredential.user.email,\n        });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n  };\n\n  async getUsers() {\n    await firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          loginStatus: true,\n        });\n      } else {\n        this.setState({\n          loginStatus: false,\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  render() {\n    if (this.state.loginStatus === false) {\n      return (\n        <div>\n          <h1>Login Form</h1>\n          <p>use firebase auth for authentication process</p>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleInput}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleInput}\n          />\n          <input type=\"submit\" value=\"login\" onClick={this.loginHandler} />\n          <Link to=\"/\">\n            <input type=\"submit\" value=\"cancel\" />\n          </Link>\n        </div>\n      );\n    } else {\n      return <Update />;\n    }\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction mainpage(props) {\n  return (\n    <div>\n      <h1>List of Users</h1>\n      <p>read from firebase and listed all the user below</p>\n      <ul>\n        {props.users.map((user) => (\n          <li key={user.name}>{user.name}</li>\n        ))}\n      </ul>\n      <Link to=\"/login\">\n        <input type=\"submit\" value=\"update\" />\n      </Link>\n    </div>\n  );\n}\n\nexport default mainpage;\n","import React from \"react\";\nimport firebase from \"./firebase\";\nimport Login from \"./login\";\nimport Update from \"./update\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Mainpage from \"./mainpage\";\n\nclass App extends React.Component {\n  state = {\n    users: [],\n    ref: firebase.firestore().collection(\"users\"),\n  };\n\n  async getUsers() {\n    await this.state.ref.onSnapshot((snap) => {\n      const item = [];\n      snap.forEach((name) => {\n        item.push(name.data());\n      });\n      this.setState({\n        users: item.sort((a, b) => (a.id > b.id ? 1 : b.id > a.id ? -1 : 0)),\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Mainpage users={this.state.users} />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/upate\">\n              <Update />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}